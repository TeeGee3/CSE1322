https://ccse.kennesaw.edu/fye/CSE1322L%20Assignment%2010.0.pdf




CSE1322L Assignment 10
File IO
Overview
For this assignment, you will implement a grade system, using the grading policies of your
current CSE1322 lecture. Your code should read student grade records from an input file
(RawGradesFile), calculate the final grade average and letter grade, and then store the student
name, student ID, final grade average, and final letter grade into a second file (FinalGradesFile).
Student grade records with no student ID present should be stored in a third file
(ErrorGradesFile), instead of the second file (FinalGradesFile). The program should also address
various exceptions/errors.
Topics
- FileIO (file reading / file writing)
- Exception Handling
(try/catch/finally hierarchy)
- Arrays
- String Methods (i.e. Split)
- CSE1322 Lecture Grading Policies
Grading
Grading Scale: Grade Assignments and Weights:
Grading Polices:
1) Students will take ten (10) quizzes (quiz 1 - quiz 10) and three (3) tests (test 1, test 2, final
exam)
2) For all students, the lowest quiz grade will be automatically dropped.
3) The final exam grade will replace grades on test 1 or test 2 if either test 1 or test 2 is missed
for any reason.
4) If a student takes all three tests (test 1, test 2, and final exam) and the final exam grade is
higher than the grade on either test 1 or test 2, the final exam grade will replace the lower
grade of test 1 or test 2 (one, not both).
A 89.5% - 100%
B 79.5% - 89.5%
C 69.5% - 79.5%
D 59.5% - 69.5%
F 59.4% or below
Assignment Percentage
Quizzes (in D2L) 25%
Exam 1 25%
Exam 2 25%
Exam 3 25%
CSE1322L Assignment 10
File IO
5) If a student was referred to Student Conduct and Academic Integrity (SCAI) and was
determined to have cheated on a test, a grade of zero (0) will be assigned to the test and the
higher final exam grade will not replace the zero (0) grade. Such test grades will be
denoted by placing a “-1.00” in the RawGradesFile input file
File Names
• RawGradesFile – This is the input file. Each record (line) contains student name, student ID,
10 quiz grades (quiz1 – quiz10), 3 test grades (test1, test2, final exam)
• FinalGradesFile – This is an output file. Each record (line) contains student name, student
ID, final grade average, final letter grade
• ErrorGradesFile – This is an output file. Each record (line) contains student name, student
ID, 10 quiz grades (quiz1 – quiz10), 3 test grades (test1, test2, final exam)
For the three files listed above:
1. The files are Notepad documents of type “.txt”
2. All data stored in the files are of type string
3. Each line in the files represents an individual student record
4. For individual student records (lines) within RawGradesFile and ErrorGradesFile, data items
are delineated by commas
5. For individual student records (lines) within FinalGradesFile, data items are delineated by
spaces (for easy readability when entering grades in OwlExpress)
File Layouts
- RawGradesFile
Tom Glavine, ,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
Grady Jarrett,11111111,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
Freddie Freeman,22222222,100.00,100.00,00.00,100.00,100.00,100.00,100.00,00.00,100.00,100.00,95.00,-1.00,90.00
Greg Maddux, ,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
- FinalGradesFile
Grady Jarrett 11111111 100 A
Freddie Freeman 22222222 68.47222222222223 D
- ErrorGradesFile
Tom Glavine, ,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
Greg Maddux, ,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
CSE1322L Assignment 10
File IO
Processing Steps
Your implementation should include the following:
1) Prompt the user for and read in the name of the grades input file (RawGradesFile)
2) Reading each record from the input file, calculate each student final grade average, final
letter grade, and populate the grades output files (FinalGradesFile and ErrorGradesFile)
3) If necessary, process exceptions/errors and the terminate program
Exception Handling
Your implementation should use exception-handling functionality (try/catch/finally) to address
the following exceptions/errors:
1. IndexOutOfRangeException – must not attempt to access an array outside of its range
2. FormatException – student grades must be of type double
3. FileNotFoundException – no input file located
4. IOException – error reading from or writing to files
Coding Specifications
Implement the following four Exceptions:
For any of the following exceptions, print an appropriate message and end the program:
1. IndexOutOfRangeException – throw and catch this exception if attempting to access an array
out of its range
2. FormatException – throw and catch this exception if an invalid grade is found (note: student
grades must be of type double)
3. FileNotFoundException - throw and catch this exception if no RawGradesFile input file is
found
4. IOException – throw and catch this exception if errors encountered reading from or writing
to files
CSE1322L Assignment 10
File IO
Implement the following Driver class:
Your driver class should contain the following functionality:
1) Prompt the user for and read in the input file name, RawGradesFile
2) If a FileNotFoundException is encountered, print an appropriate message and end the
program
3) Prepare FinalGradesFile and ErrorGradesFile for output
4) Process each record in RawGradesFile input file and add results to either FinalGradesFile or
ErrorGradesFile output files:
a. check for a missing student ID
b. if student ID is missing, add the current student record from RawGradesFile input file to
the ErrorGradesFile output file
c. if a FormatException is encountered, print an appropriate message and end the program
d. if an IndexOutOfRangeException is encountered, print an appropriate message and end
the program
e. if an IOException is encountered, print an appropriate message and end the program
f. drop the lowest quiz grade, per the quiz policies provided
g. calculate the average quiz grade, per the quiz policies provided
h. replace missed test(s) grade with the final exam grade, per the exam policies provided
i. replace lowest test grade with higher final exam grade, if student takes all three tests, per
the exam policies provided
j. if a student was found to have cheated on a test (as indicated in RawGradesFile by
posting a grade of -1.00), don’t replace the zero (0) test grade with the higher final exam
grade, per the exam policies provided
k. calculate the average test grade, per the test policies provided
l. calculate the final grade average for the course, per the grade distribution provided
m. calculate the final letter grade for the course, per the grading scale provided
n. add student name, student ID, final grade average, and final letter grade to
FinalGradesFile output file
5) Ensure FinalGradesFile and ErrorGradesFile are closed, whether an exception occurs or not
CSE1322L Assignment 10
File IO
Sample Output
(note: error messages will vary per student application)
Enter name of input file: badTestFileName.txt
Error: System.IO.FileNotFoundException: Could not find file...
Enter name of input file: RawGradesFile.txt
Error: System.IO.FormatException: Input string was not in correct format…
Enter name of input file: RawGradesFile.txt
Error: System.IndexOutOfRangeException: Index was outside the bounds of the array…
Example input file with corresponding output files:
- RawGradesFile
Tom Glavine, ,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
Grady Jarrett,11111111,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
Freddie Freeman,22222222,100.00,100.00,00.00,100.00,100.00,100.00,100.00,00.00,100.00,100.00,95.00,-1.00,90.00
Dominique Wilkins,33333333,0.00,100.00,100.00,100.00,0.00,100.00,100.00,100.00,100.00,0.00,80.00,75.00,70.00
Chipper Jones,44444444,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,-1.00
Greg Maddux, ,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
Matt Ryan,66666666,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,-1.00,50.00,90.00
Trae Young,77777777,100.00,100.00,00.00,100.00,100.00,100.00,100.00,00.00,100.00,100.00,0.00,70.00,90.00
Kyle Pitts,88888888,0.00,100.00,00.00,100.00,100.00,100.00,100.00,00.00,100.00,0.00,40.00,70.00,90.00
John Smoltz,99999999,1aa.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
(note: the data in RawGradesFile may be used as test data for students to test their code. Students can also create their own test
data.)
- FinalGradesFile
Grady Jarrett 11111111 100 A
Freddie Freeman 22222222 68.47222222222223 D
Dominique Wilkins 33333333 75.69444444444444 C
Chipper Jones 44444444 75 C
Matt Ryan 66666666 59.99999999999999 D
Trae Young 77777777 84.72222222222221 B
Kyle Pitts 88888888 79.16666666666667 C
- ErrorGradesFile
Tom Glavine, ,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
Greg Maddux, ,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00
CSE1322L Assignment 10
File IO
Submission Guidelines
Please follow the posted submission guidelines here:
https://ccse.kennesaw.edu/fye/submissionguidelines.php
Ensure you submit before the deadline listed on the lab schedule for CSE1322L here:
https://ccse.kennesaw.edu/fye/courseschedules.php
Grading Rubric
1) Prompt the user for and read in the input file name, RawGradesFile (5 points)
2) If a FileNotFoundException is encountered, print an appropriate message and end the
program (5 points)
3) Prepare FinalGradesFile and ErrorGradesFile for output (5 points)
4) Process each record in RawGradesFile input file and add results to either FinalGradesFile or
ErrorGradesFile output file:
a. check for a missing student ID (5 points)
b. if student id is missing, add the current student record from RawGradesFile input file to
the ErrorGradesFile output file (5 points)
c. if a FormatException is encountered, print an appropriate message and end the program
(5 points)
d. if an IndexOutOfRangeException is encountered, print an appropriate message and end
the program (5 points)
e. drop the lowest quiz grade, per the quiz policies provided (5 points)
f. calculate the average quiz grade, per the quiz policies provided (5 points)
g. replace missed test(s) grade with the final exam grade, per the exam policies provided
(5 points)
h. replace lowest test grade with higher final exam grade, if student takes all three tests, per
the exam policies provided (5 points)
i. if a student was found to have cheated on a test (as indicated in RawGradesFile by
posting a grade of -1.00), don’t replace the zero (0) test grade with the higher final exam
grade, per the exam policies (10 points)
j. calculate the average test grade, per the test policies provided (10 points)
k. calculate the final grade average for the course, per the grade distribution provided
(10 points)
l. calculate the final letter grade for the course, per the grading scale provided (5 points)
CSE1322L Assignment 10
File IO
m. add student name, student ID, final grade average, and final letter grade to
FinalGradesFile output file (5 points)
5) Ensure FinalGradesFile and ErrorGradesFile are closed, whether an exception occurs or not
(5 points)
