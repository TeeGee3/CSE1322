https://ccse.kennesaw.edu/fye/CSE1322L%20Lab%201.pdf


Print Cars:

Expected Outcome: 

  ______     
 /|_||_\'.__ 
(   _    _ _\
='-(_)--(_)-'
     ______  
 __.'/_||_|\ 
/_ _    _   )
'-(_)--(_)-'=
  ______          ______  
 /|_||_\'.__  __.'/_||_|\ 
(   _    _ _\/_ _    _   )
='-(_)--(_)-''-(_)--(_)-'=


====================================================

mport java.util.Arrays;
import java.util.StringJoiner;

public class Lab1a {

    public static char[][] make_forward(){
        char[][] pixel = new char [4][13];
        pixel[0][0]=' ';
        pixel[0][1]=' ';
        pixel[0][2]='_';
        pixel[0][3]='_';
        pixel[0][4]='_';
        pixel[0][5]='_';
        pixel[0][6]='_';
        pixel[0][7]='_';
        pixel[0][8]=' ';
        pixel[0][9]=' ';
        pixel[0][10]=' ';
        pixel[0][11]=' ';
        pixel[0][12]=' ';
        pixel[1][0]=' ';
        pixel[1][1]='/';
        pixel[1][2]='|';
        pixel[1][3]='_';
        pixel[1][4]='|';
        pixel[1][5]='|';
        pixel[1][6]='_';
        pixel[1][7]='\\';
        pixel[1][8]='\'';
        pixel[1][9]='.';
        pixel[1][10]='_';
        pixel[1][11]='_';
        pixel[1][12]=' ';
        pixel[2][0]='(';
        pixel[2][1]=' ';
        pixel[2][2]=' ';
        pixel[2][3]=' ';
        pixel[2][4]='_';
        pixel[2][5]=' ';
        pixel[2][6]=' ';
        pixel[2][7]=' ';
        pixel[2][8]=' ';
        pixel[2][9]='_';
        pixel[2][10]=' ';
        pixel[2][11]='_';
        pixel[2][12]='\\';
        pixel[3][0]='=';
        pixel[3][1]='\'';
        pixel[3][2]='-';
        pixel[3][3]='(';
        pixel[3][4]='_';
        pixel[3][5]=')';
        pixel[3][6]='-';
        pixel[3][7]='-';
        pixel[3][8]='(';
        pixel[3][9]='_';
        pixel[3][10]=')';
        pixel[3][11]='-';
        pixel[3][12]='\'';
        return pixel;
    }

    //make mirror method - reverse order of input into array
    public static char[][] make_mirror(char[][] mirror){
        //take in 2D array as para ad return mirrored version
        char[][] tempArray = mirror;
        char[][] arrayMirror = new char[4][13];

        // rotates through index and replaces number 1 by 1
        for(int row = 0; row < arrayMirror.length; row++){
            int reverse = 12;
            for(int col =0; col < arrayMirror[0].length; col++) {
                //one array equals other array
                arrayMirror[row][col] = tempArray[row][reverse];
                    reverse--;  //this allows the temp array to count backwords for each column in a row and reset at new row,

//                // switching out any characters match criteria, switch them out
//                if(arrayMirror[row][col] == '('){ arrayMirror[row][col] = ')'; }
//                if(arrayMirror[row][col] == ')'){ arrayMirror[row][col] = '('; }
//                if(arrayMirror[row][col] == '/'){ arrayMirror[row][col] = '\\'; }
//                if(arrayMirror[row][col] == '\\'){ arrayMirror[row][col] = '/'; }

                //switch case instead of IF statement to change out characters
                switch(arrayMirror[row][col]){
                    case '(': arrayMirror[row][col] = ')'; break;
                    case ')': arrayMirror[row][col] = '('; break;
                    case '/': arrayMirror[row][col] = '\\'; break;
                    case '\\': arrayMirror[row][col] = '/'; break;
                    default: arrayMirror[row][col] = arrayMirror[row][col];
                }

            }
        }

        mirror = arrayMirror;

        return mirror;
    }



//  create metho that merges two arrays together in order to print both cars on one line
    public static char[][] together(char[][] right, char[][]left) {

        char[][] collision = new char[4][26];

        for (int row = 0; row < 4; row++) {
            for (int col = 0; col < 13; col++) {

                collision[row][col] = right[row][col];
            }
        }

        for (int row = 0; row < 4; row++) {
            int col1 = 0;
            for (int col = 13; col < 26; col++) {
                collision[row][col] = left[row][col1];
                col1++;
            }
        }

        return collision;
    }

    public static void main(String[] args){
        char[][] myArray = new char [4][13]; //create new 2D array

        myArray = make_forward(); //uses method to fill myArray


        //Displays input 2D array in matrix format
        for(char[] items : myArray){
            for(char item : items){
                System.out.print(item);
            }
            System.out.println();
        }
        //      //Print in single line sperated by comma
        //        for(int row = 0; row < myArray.length; row++){
        //            for(int col =0; col < myArray[0].length; col++){
        //                System.out.print(myArray[row][col] );
        //            }
        //            System.out.println();
        //        }

        //creating new mirrored array
        char[][] mirrorArray = new char[4][13];

        //call to make mirror of array
        mirrorArray = make_mirror(myArray);

        //Displays mirror array 2D array in matrix format
        for(char[] items : mirrorArray){
            for(char item : items){
                System.out.print(item);
            }
            System.out.println();
        }

        char[][] collision = together(myArray, mirrorArray);



        // Print two cars on one line
        for(int row = 0; row < collision.length; row++){
            for(int col =0; col < collision[0].length; col++) {

                System.out.print(collision[row][col]);

//                System.out.print("                ");
//
//                for (int col1 = 0; col1 < myArray[0].length; col1++) {
//                    System.out.print(mirrorArray[row][col1]);
//                    //System.out.print("\t");
//                    //System.out.print(string2);


                }
            System.out.println();
            }
        }
    }



https://ccse.kennesaw.edu/fye/CSE1322L%20Lab%201.pdf
Background:
In this lab, you are going to draw some Ascii Art using a two dimensional array. When dealing with
multi-dimensional arrays, you’ll typically use nested loops (i.e. a loop within a loop). The outer loop
typically iterates over the rows of the array, while the inner loop typically iterates over the columns.
A two dimensional array uses two indexes. The first index represents the row number, while the
second index represents the column. For example: myArray[0][1] refers to the first row (0) and the
second column (1).
Your Tasks:
1) Open your IDE and start a new project.
2) Copy and paste the appropriate version of the make_forward() method from page 3 below. This
method creates and returns a two dimensional array of characters with some Ascii Art in it.
3) In your main method, create a two dimensional array of characters with 4 rows and 13 columns.
4) Call the make_forward() method and store the result in your new array.
5) Using loops, print out the array contents character by character. You should see Ascii Art.
6) Write a new method called make_mirror(). It should take a two dimensional array as a
parameter and return a mirrored version of that 2D array. i.e. The contents of each row should
be reversed as follows:
a) Input array cell [0][0] should be copied to cell [0][12] in the return array, likewise cell
[0][1] should be copied to cell [0][11] … cell [0][12] should be copied to cell [0][0]
b) Cell [1][0] will be copied to cell [1][12], cell [1][1] should be copied to cell [1][11] etc...
c) The same is true for the other two rows.
d) As you copy each character, check the table below to see if the character itself needs to
be reversed. If the character is not in the table, copy it as normal, but if it is in the table,
replace it with the “Mirrored” character. You will need if statements for this.
Note: The backslash (\) has special meaning. It means to “escape” the next character that’s typed. For
example, if you want to set a variable x to ‘ you would write: char x=’\’’. This is because quotes
are used when specifying a character. If you wish to print or compare a backslash itself, you’ll need to
escape it, so you’ll actually have to write \\. So, for example, to set a variable x to \, you’d write
char x=’\\’. You’ll need this when swapping forward slashes and backslashes. There are examples
of escaping in the provided make_forward() method.
Old Character Mirrored Character
( )
) (
/ \ (backslash - above enter key)
\ (backslash - above enter key) /
7) In your main method, create another 2d array of characters of the same size (4x13). Call the
make_mirror() method, passing it the original array returned from the make_forward() method.
Store the result in your new array.
8) Print out the mirrored 2D array.
9) Finally, in your main method, print the forward and mirrored image on the same lines, so that
they face each other as if having a head on collision…see below:
